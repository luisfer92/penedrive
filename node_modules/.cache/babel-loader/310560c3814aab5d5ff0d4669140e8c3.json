{"ast":null,"code":"import _slicedToArray from\"/home/luisfer/Escritorio/rerovaji-control/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect}from'react';import{useProducto}from'./ProductoContext';import firebase,{auth,database,storage}from'../firebase';import{jsx as _jsx}from\"react/jsx-runtime\";var AuthContext=/*#__PURE__*/React.createContext();export function useAuth(){return React.useContext(AuthContext);}export function AuthProvider(_ref){var children=_ref.children;var _React$useState=React.useState(auth.currentUser),_React$useState2=_slicedToArray(_React$useState,2),currentUser=_React$useState2[0],setCurrentUser=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),loggedOut=_React$useState4[0],setLoggedOut=_React$useState4[1];var _React$useState5=React.useState(true),_React$useState6=_slicedToArray(_React$useState5,2),loading=_React$useState6[0],setLoading=_React$useState6[1];var _useProducto=useProducto(),loadProductoContext=_useProducto.loadProductoContext;var _React$useState7=React.useState(),_React$useState8=_slicedToArray(_React$useState7,2),userAPI=_React$useState8[0],setUserApi=_React$useState8[1];var value={currentUser:currentUser,userAPI:userAPI,loggedOut:loggedOut,loading:loading,login:login,logout:logout,loadUserData:loadUserData};function loadUserData(usuairo){var uid=usuairo.uid;database.collection(\"usuarios\").doc(uid).get().then(function(queryResult){var data=queryResult.data();queryResult.exists&&storage.ref('fotos_perfil/'+uid+\".png\").getDownloadURL().then(function(url){return setUserApi(Object.assign({},data,{id:uid,profileUrl:url}));});});}function login(email,password){return auth.setPersistence(\"local\").then(function(){// Existing and future Auth states are now persisted in the current\n// session only. Closing the window would clear any existing state even\n// if a user forgets to sign out.\n// ...\n// New sign-in will be persisted with session persistence.\nsetLoading(true);return firebase.auth().signInWithEmailAndPassword(email,password);}).catch(function(error){// Handle Errors here.\nvar errorCode=error.code;var errorMessage=error.message;console.log(\"error:\".concat(errorCode,\" \\n \").concat(errorMessage));});}function logout(){setLoggedOut(true);return auth.signOut();}useEffect(function(){var unsubscribre=auth.onAuthStateChanged(function(user){setCurrentUser(user);user&&loadUserData(user);user&&loadProductoContext();});return unsubscribre;},[]);useEffect(function(){currentUser&&setLoading(false);console.log(userAPI);},[currentUser]);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});}","map":{"version":3,"sources":["/home/luisfer/Escritorio/rerovaji-control/src/contexts/AuthContext.js"],"names":["React","useEffect","useProducto","firebase","auth","database","storage","AuthContext","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loggedOut","setLoggedOut","loading","setLoading","loadProductoContext","userAPI","setUserApi","value","login","logout","loadUserData","usuairo","uid","collection","doc","get","then","queryResult","data","exists","ref","getDownloadURL","url","Object","assign","id","profileUrl","email","password","setPersistence","signInWithEmailAndPassword","catch","error","errorCode","code","errorMessage","message","console","log","signOut","unsubscribre","onAuthStateChanged","user"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\n\n\n\nimport { useProducto } from './ProductoContext';\nimport firebase,{auth,database,storage} from '../firebase'\n\nconst AuthContext = React.createContext();\n\n\n\nexport function useAuth() {\n    return React.useContext(AuthContext)\n}\n\n\nexport function AuthProvider({ children }) {\n\n    const [currentUser, setCurrentUser] = React.useState(auth.currentUser);\n    const [loggedOut,setLoggedOut]=React.useState(false)\n    const [loading, setLoading] = React.useState(true);\n    const {loadProductoContext} = useProducto();\n    const [userAPI,setUserApi]=React.useState()\n\n    const value = {\n        currentUser,\n        userAPI,\n        loggedOut,\n        loading,\n        login,\n        logout,\n        loadUserData\n        \n    }\n\n    function  loadUserData (usuairo) {\n        const uid=usuairo.uid\n        database.collection(\"usuarios\").doc(uid).get().then(queryResult=>{\n            const data=queryResult.data()\n           \n            \n            queryResult.exists && storage.ref('fotos_perfil/'+uid+\".png\").getDownloadURL().\n                then((url)=>setUserApi(Object.assign({},data,{id:uid,profileUrl:url})))\n        })\n    }\n\n    function login(email, password) {\n        \n\n        return auth.setPersistence(\"local\")\n            .then(() => {\n                // Existing and future Auth states are now persisted in the current\n                // session only. Closing the window would clear any existing state even\n                // if a user forgets to sign out.\n                // ...\n                // New sign-in will be persisted with session persistence.\n                setLoading(true)\n                return firebase.auth().signInWithEmailAndPassword(email, password);\n            })\n            .catch((error) => {\n                // Handle Errors here.\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                console.log(`error:${errorCode} \\n ${errorMessage}`)\n            });\n       \n       \n    }\n\n    function logout() {\n        setLoggedOut(true)\n        return auth.signOut();\n    }\n\n    useEffect(() => {\n        \n        \n        const unsubscribre = auth.onAuthStateChanged(user => {\n            setCurrentUser(user)\n            user && loadUserData(user)\n            user && loadProductoContext()\n        })\n        \n\n        return unsubscribre;\n    }, [])\n\n    useEffect(()=>{\n        currentUser && setLoading(false)\n        console.log(userAPI)\n    },[currentUser])\n\n\n    return (\n        <AuthContext.Provider value={value}>\n            {children}\n        </AuthContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}