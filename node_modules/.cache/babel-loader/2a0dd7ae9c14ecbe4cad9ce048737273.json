{"ast":null,"code":"var _jsxFileName = \"/home/luisfer/Escritorio/rerovaji-control/src/contexts/TrabajadorContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { database } from '../firebase';\nimport { ContratoContext } from './ContratoContext';\nimport { storage } from '../firebase';\nimport { useLocal } from './LocalContext';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TrabajadorContext = /*#__PURE__*/React.createContext();\nexport function useTrabajador() {\n  _s();\n\n  return React.useContext(TrabajadorContext);\n}\n\n_s(useTrabajador, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function TrabajadorProvider({\n  children\n}) {\n  _s2();\n\n  const {\n    local\n  } = useLocal();\n  const {\n    registerTrabajador\n  } = useAuth();\n  const [trabajadores, setTrabajadores] = useState();\n  const [selfDB, setDB] = useState();\n  useEffect(() => {\n    if (local) {\n      const db = database.collection(\"locales\").doc(local.id).collection(\"plantilla\");\n      setDB(db);\n    }\n  }, [local]);\n  useEffect(() => {\n    let unsubscribe = null;\n\n    if (selfDB) {\n      const plantilla = [];\n      selfDB.orderBy(\"nombre\").onSnapshot(snap => {\n        snap.forEach(t => {\n          console.log(t.data());\n          plantilla.push({\n            id: t.id,\n            ...t.data()\n          });\n        });\n        setTrabajadores(plantilla);\n      });\n    }\n\n    return unsubscribe ? () => unsubscribe() : null;\n  }, [selfDB, setTrabajadores]);\n\n  const createTrabajador = trabajdor => {\n    var trabajador_id = null;\n    selfDB.add(trabajdor).then(query => {\n      console.log(query.id);\n      trabajador_id = query.id;\n    });\n    return trabajador_id;\n  };\n\n  const value = {\n    trabajadores,\n    createTrabajador\n  };\n  return /*#__PURE__*/_jsxDEV(TrabajadorContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(TrabajadorProvider, \"+07Pl5vtfm3O50yBm8rUqF93VVk=\", false, function () {\n  return [useLocal, useAuth];\n});\n\n_c = TrabajadorProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrabajadorProvider\");","map":{"version":3,"sources":["/home/luisfer/Escritorio/rerovaji-control/src/contexts/TrabajadorContext.js"],"names":["React","useEffect","useState","database","ContratoContext","storage","useLocal","useAuth","TrabajadorContext","createContext","useTrabajador","useContext","TrabajadorProvider","children","local","registerTrabajador","trabajadores","setTrabajadores","selfDB","setDB","db","collection","doc","id","unsubscribe","plantilla","orderBy","onSnapshot","snap","forEach","t","console","log","data","push","createTrabajador","trabajdor","trabajador_id","add","then","query","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAAQC,OAAR,QAAsB,eAAtB;;AAIA,OAAO,MAAMC,iBAAiB,gBAAGR,KAAK,CAACS,aAAN,EAA1B;AAKP,OAAO,SAASC,aAAT,GAAyB;AAAA;;AAC5B,SAAOV,KAAK,CAACW,UAAN,CAAiBH,iBAAjB,CAAP;AACH;;GAFeE,a;;AAGhB,OAAO,SAASE,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAA0C;AAAA;;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAAYR,QAAQ,EAA1B;AACA,QAAM;AAAES,IAAAA;AAAF,MAAyBR,OAAO,EAAtC;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,EAAhD;AACA,QAAM,CAACgB,MAAD,EAASC,KAAT,IAAkBjB,QAAQ,EAAhC;AASAD,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIa,KAAJ,EAAW;AACP,YAAMM,EAAE,GAAGjB,QAAQ,CAACkB,UAAT,CAAoB,SAApB,EAA+BC,GAA/B,CAAmCR,KAAK,CAACS,EAAzC,EAA6CF,UAA7C,CAAwD,WAAxD,CAAX;AACAF,MAAAA,KAAK,CAACC,EAAD,CAAL;AAEH;AAGJ,GATQ,EASN,CAACN,KAAD,CATM,CAAT;AAWAb,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIuB,WAAW,GAAG,IAAlB;;AACA,QAAIN,MAAJ,EAAY;AACR,YAAMO,SAAS,GAAG,EAAlB;AAEAP,MAAAA,MAAM,CAACQ,OAAP,CAAe,QAAf,EAAyBC,UAAzB,CAAqCC,IAAD,IAAU;AAC1CA,QAAAA,IAAI,CAACC,OAAL,CAAcC,CAAD,IAAO;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,IAAF,EAAZ;AACAR,UAAAA,SAAS,CAACS,IAAV,CAAe;AAAEX,YAAAA,EAAE,EAAEO,CAAC,CAACP,EAAR;AAAY,eAAGO,CAAC,CAACG,IAAF;AAAf,WAAf;AACH,SAHD;AAIAhB,QAAAA,eAAe,CAACQ,SAAD,CAAf;AAEH,OAPD;AASH;;AAED,WAAOD,WAAW,GAAG,MAAMA,WAAW,EAApB,GAAyB,IAA3C;AACH,GAlBQ,EAkBN,CAACN,MAAD,EAASD,eAAT,CAlBM,CAAT;;AAoBA,QAAMkB,gBAAgB,GAAIC,SAAD,IAAe;AACpC,QAAIC,aAAa,GAAC,IAAlB;AACAnB,IAAAA,MAAM,CAACoB,GAAP,CAAWF,SAAX,EAAsBG,IAAtB,CAA4BC,KAAD,IAAW;AAClCT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAK,CAACjB,EAAlB;AACAc,MAAAA,aAAa,GAACG,KAAK,CAACjB,EAApB;AACH,KAHD;AAIA,WAAQc,aAAR;AACH,GAPD;;AASA,QAAMI,KAAK,GAAG;AACVzB,IAAAA,YADU;AAEVmB,IAAAA;AAFU,GAAd;AAQA,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAEM,KAAnC;AAAA,cAES5B;AAFT;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;IApEeD,kB;UACMN,Q,EACaC,O;;;KAFnBK,kB","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { database } from '../firebase'\nimport { ContratoContext } from './ContratoContext';\nimport { storage } from '../firebase'\nimport { useLocal } from './LocalContext';\nimport {useAuth} from './AuthContext'\n\n\n\nexport const TrabajadorContext = React.createContext();\n\n\n\n\nexport function useTrabajador() {\n    return React.useContext(TrabajadorContext)\n}\nexport function TrabajadorProvider({ children }) {\n    const { local } = useLocal()\n    const { registerTrabajador } = useAuth()\n    const [trabajadores, setTrabajadores] = useState()\n    const [selfDB, setDB] = useState()\n\n    \n\n\n    \n\n\n\n    useEffect(() => {\n\n        if (local) {\n            const db = database.collection(\"locales\").doc(local.id).collection(\"plantilla\")\n            setDB(db)\n\n        }\n\n\n    }, [local])\n\n    useEffect(() => {\n\n        let unsubscribe = null\n        if (selfDB) {\n            const plantilla = []\n            \n            selfDB.orderBy(\"nombre\").onSnapshot((snap) => {\n                snap.forEach((t) => {\n                    console.log(t.data())\n                    plantilla.push({ id: t.id, ...t.data() })\n                })\n                setTrabajadores(plantilla)\n                \n            })\n\n        }\n\n        return unsubscribe ? () => unsubscribe() : null\n    }, [selfDB, setTrabajadores])\n\n    const createTrabajador = (trabajdor) => {\n        var trabajador_id=null\n        selfDB.add(trabajdor).then((query) => {\n            console.log(query.id)\n            trabajador_id=query.id\n        })\n        return (trabajador_id)\n    }\n\n    const value = {\n        trabajadores,\n        createTrabajador,\n\n    }\n    \n\n\n    return (\n        <TrabajadorContext.Provider value={value}>\n            \n                {children}\n            \n        </TrabajadorContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}