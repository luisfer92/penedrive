{"ast":null,"code":"var _jsxFileName = \"/home/luisfer/Escritorio/rerovaji-control/src/contexts/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useProducto } from './ProductoContext';\nimport firebase, { auth, database, storage } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return React.useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n\n  const [currentUser, setCurrentUser] = React.useState(auth.currentUser);\n  const [loggedOut, setLoggedOut] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const {\n    loadProductoContext\n  } = useProducto();\n  const [userAPI, setUserApi] = React.useState();\n  const value = {\n    currentUser,\n    userAPI,\n    loggedOut,\n    loading,\n    login,\n    logout,\n    loadUserData,\n    registerUser\n  };\n\n  function registerUser(email) {\n    const firstPwd = (Math.random() + 1).toString(36).substring(2);\n    auth.createUserWithEmailAndPassword(usuario.email, firstPwd);\n  }\n\n  function loadUserData(usuairo) {\n    const uid = usuairo.uid;\n    database.collection(\"usuarios\").doc(uid).get().then(queryResult => {\n      const data = queryResult.data();\n      queryResult.exists && storage.ref('fotos_perfil/' + uid + \".png\").getDownloadURL().then(url => setUserApi(Object.assign({}, data, {\n        id: uid,\n        profileUrl: url\n      })));\n    });\n  }\n\n  function login(email, password) {\n    return auth.setPersistence(\"local\").then(() => {\n      // Existing and future Auth states are now persisted in the current\n      // session only. Closing the window would clear any existing state even\n      // if a user forgets to sign out.\n      // ...\n      // New sign-in will be persisted with session persistence.\n      setLoading(true);\n      return firebase.auth().signInWithEmailAndPassword(email, password);\n    }).catch(error => {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      console.log(`error:${errorCode} \\n ${errorMessage}`);\n    });\n  }\n\n  function logout() {\n    setLoggedOut(true);\n    return auth.signOut();\n  }\n\n  useEffect(() => {\n    const unsubscribre = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n      user && loadUserData(user);\n      user && loadProductoContext();\n    });\n    return unsubscribre;\n  }, []);\n  useEffect(() => {\n    currentUser && setLoading(false);\n    console.log(userAPI);\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(AuthProvider, \"HRsyv4d0D6SRrQ+vB0HvTvBz6mw=\", false, function () {\n  return [useProducto];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/luisfer/Escritorio/rerovaji-control/src/contexts/AuthContext.js"],"names":["React","useEffect","useProducto","firebase","auth","database","storage","AuthContext","createContext","useAuth","useContext","AuthProvider","children","currentUser","setCurrentUser","useState","loggedOut","setLoggedOut","loading","setLoading","loadProductoContext","userAPI","setUserApi","value","login","logout","loadUserData","registerUser","email","firstPwd","Math","random","toString","substring","createUserWithEmailAndPassword","usuario","usuairo","uid","collection","doc","get","then","queryResult","data","exists","ref","getDownloadURL","url","Object","assign","id","profileUrl","password","setPersistence","signInWithEmailAndPassword","catch","error","errorCode","code","errorMessage","message","console","log","signOut","unsubscribre","onAuthStateChanged","user"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\n\n\n\nimport { useProducto } from './ProductoContext';\nimport firebase,{auth,database,storage} from '../firebase'\n\nconst AuthContext = React.createContext();\n\n\n\nexport function useAuth() {\n    return React.useContext(AuthContext)\n}\n\n\nexport function AuthProvider({ children }) {\n\n    const [currentUser, setCurrentUser] = React.useState(auth.currentUser);\n    const [loggedOut,setLoggedOut]=React.useState(false)\n    const [loading, setLoading] = React.useState(true);\n    const {loadProductoContext} = useProducto();\n    const [userAPI,setUserApi]=React.useState()\n\n    const value = {\n        currentUser,\n        userAPI,\n        loggedOut,\n        loading,\n        login,\n        logout,\n        loadUserData,\n        registerUser,\n        \n    }\n\n    function registerUser(email){\n        const firstPwd = (Math.random() + 1).toString(36).substring(2);\n    \n        auth.createUserWithEmailAndPassword(usuario.email,firstPwd)\n    }\n\n    function  loadUserData (usuairo) {\n        const uid=usuairo.uid\n        database.collection(\"usuarios\").doc(uid).get().then(queryResult=>{\n            const data=queryResult.data()\n           \n            \n            queryResult.exists && storage.ref('fotos_perfil/'+uid+\".png\").getDownloadURL().\n                then((url)=>setUserApi(Object.assign({},data,{id:uid,profileUrl:url})))\n        })\n    }\n\n    function login(email, password) {\n        \n\n        return auth.setPersistence(\"local\")\n            .then(() => {\n                // Existing and future Auth states are now persisted in the current\n                // session only. Closing the window would clear any existing state even\n                // if a user forgets to sign out.\n                // ...\n                // New sign-in will be persisted with session persistence.\n                setLoading(true)\n                return firebase.auth().signInWithEmailAndPassword(email, password);\n            })\n            .catch((error) => {\n                // Handle Errors here.\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                console.log(`error:${errorCode} \\n ${errorMessage}`)\n            });\n       \n       \n    }\n\n    function logout() {\n        setLoggedOut(true)\n        return auth.signOut();\n    }\n\n    useEffect(() => {\n        \n        \n        const unsubscribre = auth.onAuthStateChanged(user => {\n            setCurrentUser(user)\n            user && loadUserData(user)\n            user && loadProductoContext()\n        })\n        \n\n        return unsubscribre;\n    }, [])\n\n    useEffect(()=>{\n        currentUser && setLoading(false)\n        console.log(userAPI)\n    },[currentUser])\n\n\n    return (\n        <AuthContext.Provider value={value}>\n            {children}\n        </AuthContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}