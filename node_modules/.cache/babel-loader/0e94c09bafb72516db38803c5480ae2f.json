{"ast":null,"code":"var _jsxFileName = \"/home/luisfer/Escritorio/rerovaji-control/src/contexts/ProductoContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { database } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductoContext = /*#__PURE__*/React.createContext();\nexport function useProducto() {\n  _s();\n\n  return React.useContext(ProductoContext);\n}\n\n_s(useProducto, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function ProductoProvider({\n  children\n}) {\n  _s2();\n\n  const [productos, setProductos] = React.useState();\n  const [categorias, setCategorias] = React.useState();\n  const value = {\n    productos,\n    categorias,\n    loadProductoContext,\n    upgradeProducto,\n    upgradeProductoBulk\n  };\n\n  function loadProducto() {\n    const productosRef = database.collection(\"productos\");\n    productosRef.get().then(querySnapshot => {\n      const lista = [];\n      querySnapshot.forEach(documentSnapshot => {\n        lista.push({\n          id: documentSnapshot.id,\n          ...documentSnapshot.data()\n        });\n      });\n      setProductos(lista);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  function loadProductoContext() {\n    loadProducto();\n    database.collection(\"categorias_producto\").get().then(query => {\n      const lista = [];\n      query.forEach(document => {\n        lista.push({\n          id: document.id,\n          ...document.data()\n        });\n      });\n      setCategorias(lista);\n    });\n  }\n\n  function upgradeProducto(prodID, data, deleteKey) {\n    console.log(prodID);\n    database.collection(\"productos\").doc(prodID).update(data).then(() => {\n      console.log(\"exito?\");\n      const newProductos = productos.map(producto => {\n        const match = producto.id == prodID;\n        data = deleteKey ? {\n          categoria_id: undefined\n        } : data;\n        return match ? Object.assign({}, producto, data) : producto;\n      });\n      setProductos(newProductos);\n    });\n  }\n\n  function upgradeProductoBulk(productosID, data, deleteKey) {\n    const batch = database.batch();\n    const nuevosProductos = [];\n    productosID.forEach(prodID => {\n      const ref = database.collection(\"productos\").doc(prodID);\n      batch.update(ref, data);\n      data = deleteKey ? {\n        categoria_id: undefined\n      } : data;\n      let producto = productos.find(p => p.id == productosID);\n      producto = Object.assign({}, producto, data);\n      nuevosProductos.push(producto);\n    });\n    batch.commit().then(() => {\n      let dataProductos = productos.map(producto => {\n        const nuevoProducto = nuevosProductos.find(np => {\n          return np.id === producto.id;\n        });\n        nuevoProducto && console.log(nuevosProductos);\n        return nuevoProducto ? nuevoProducto : producto;\n      });\n      setProductos(dataProductos);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(ProductoContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(ProductoProvider, \"CDBvX476aAks0BWhUKSeetfxDfY=\");\n\n_c = ProductoProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductoProvider\");","map":{"version":3,"sources":["/home/luisfer/Escritorio/rerovaji-control/src/contexts/ProductoContext.js"],"names":["React","useState","useEffect","database","ProductoContext","createContext","useProducto","useContext","ProductoProvider","children","productos","setProductos","categorias","setCategorias","value","loadProductoContext","upgradeProducto","upgradeProductoBulk","loadProducto","productosRef","collection","get","then","querySnapshot","lista","forEach","documentSnapshot","push","id","data","catch","error","console","log","query","document","prodID","deleteKey","doc","update","newProductos","map","producto","match","categoria_id","undefined","Object","assign","productosID","batch","nuevosProductos","ref","find","p","commit","dataProductos","nuevoProducto","np"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAEA,MAAMC,eAAe,gBAAGJ,KAAK,CAACK,aAAN,EAAxB;AAIA,OAAO,SAASC,WAAT,GAAuB;AAAA;;AAC1B,SAAON,KAAK,CAACO,UAAN,CAAiBH,eAAjB,CAAP;AACH;;GAFeE,W;;AAKhB,OAAO,SAASE,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAwC;AAAA;;AAG3C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,KAAK,CAACC,QAAN,EAAlC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8Bb,KAAK,CAACC,QAAN,EAApC;AAEA,QAAMa,KAAK,GAAG;AACVJ,IAAAA,SADU;AAEVE,IAAAA,UAFU;AAGVG,IAAAA,mBAHU;AAIVC,IAAAA,eAJU;AAKVC,IAAAA;AALU,GAAd;;AAQA,WAASC,YAAT,GAAwB;AACpB,UAAMC,YAAY,GAAGhB,QAAQ,CAACiB,UAAT,CAAoB,WAApB,CAArB;AACAD,IAAAA,YAAY,CAACE,GAAb,GAAmBC,IAAnB,CAAwBC,aAAa,IAAI;AAErC,YAAMC,KAAK,GAAG,EAAd;AACAD,MAAAA,aAAa,CAACE,OAAd,CAAsBC,gBAAgB,IAAI;AACtCF,QAAAA,KAAK,CAACG,IAAN,CAAW;AAAEC,UAAAA,EAAE,EAAEF,gBAAgB,CAACE,EAAvB;AAA2B,aAAGF,gBAAgB,CAACG,IAAjB;AAA9B,SAAX;AACH,OAFD;AAGAlB,MAAAA,YAAY,CAACa,KAAD,CAAZ;AAEH,KARD,EAQGM,KARH,CAQSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAVD;AAWH;;AAED,WAAShB,mBAAT,GAA+B;AAC3BG,IAAAA,YAAY;AACZf,IAAAA,QAAQ,CAACiB,UAAT,CAAoB,qBAApB,EAA2CC,GAA3C,GAAiDC,IAAjD,CAAsDY,KAAK,IAAI;AAC3D,YAAMV,KAAK,GAAG,EAAd;AACAU,MAAAA,KAAK,CAACT,OAAN,CAAcU,QAAQ,IAAI;AAAEX,QAAAA,KAAK,CAACG,IAAN,CAAW;AAAEC,UAAAA,EAAE,EAAEO,QAAQ,CAACP,EAAf;AAAmB,aAAGO,QAAQ,CAACN,IAAT;AAAtB,SAAX;AAAqD,OAAjF;AAEAhB,MAAAA,aAAa,CAACW,KAAD,CAAb;AACH,KALD;AAMH;;AAED,WAASR,eAAT,CAAyBoB,MAAzB,EAAiCP,IAAjC,EAAuCQ,SAAvC,EAAkD;AAC9CL,IAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AAEAjC,IAAAA,QAAQ,CAACiB,UAAT,CAAoB,WAApB,EAAiCkB,GAAjC,CAAqCF,MAArC,EAA6CG,MAA7C,CAAoDV,IAApD,EACIP,IADJ,CACS,MAAM;AACPU,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,YAAMO,YAAY,GAAG9B,SAAS,CAAC+B,GAAV,CAAeC,QAAD,IAAc;AAE7C,cAAMC,KAAK,GAAID,QAAQ,CAACd,EAAT,IAAeQ,MAA9B;AACAP,QAAAA,IAAI,GAAGQ,SAAS,GAAG;AAAEO,UAAAA,YAAY,EAAEC;AAAhB,SAAH,GAAiChB,IAAjD;AACA,eAAOc,KAAK,GAAGG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,QAAlB,EAA4Bb,IAA5B,CAAH,GAAuCa,QAAnD;AACH,OALoB,CAArB;AAOA/B,MAAAA,YAAY,CAAC6B,YAAD,CAAZ;AACH,KAXL;AAYH;;AAID,WAASvB,mBAAT,CAA6B+B,WAA7B,EAA0CnB,IAA1C,EAAgDQ,SAAhD,EAA2D;AACvD,UAAMY,KAAK,GAAG9C,QAAQ,CAAC8C,KAAT,EAAd;AACA,UAAMC,eAAe,GAAE,EAAvB;AAEAF,IAAAA,WAAW,CAACvB,OAAZ,CAAqBW,MAAD,IAAY;AAE5B,YAAMe,GAAG,GAAGhD,QAAQ,CAACiB,UAAT,CAAoB,WAApB,EAAiCkB,GAAjC,CAAqCF,MAArC,CAAZ;AACAa,MAAAA,KAAK,CAACV,MAAN,CAAaY,GAAb,EAAkBtB,IAAlB;AAGAA,MAAAA,IAAI,GAAGQ,SAAS,GAAG;AAAEO,QAAAA,YAAY,EAAEC;AAAhB,OAAH,GAAiChB,IAAjD;AAEA,UAAIa,QAAQ,GAAEhC,SAAS,CAAC0C,IAAV,CAAeC,CAAC,IAAEA,CAAC,CAACzB,EAAF,IAAMoB,WAAxB,CAAd;AACAN,MAAAA,QAAQ,GAACI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBL,QAAjB,EAA0Bb,IAA1B,CAAT;AACAqB,MAAAA,eAAe,CAACvB,IAAhB,CAAqBe,QAArB;AAEH,KAZD;AAcAO,IAAAA,KAAK,CAACK,MAAN,GAAehC,IAAf,CAAoB,MAAI;AAEpB,UAAIiC,aAAa,GAAC7C,SAAS,CAAC+B,GAAV,CAAeC,QAAD,IAAY;AACxC,cAAMc,aAAa,GAAEN,eAAe,CAACE,IAAhB,CAAsBK,EAAD,IAAM;AAAC,iBAAOA,EAAE,CAAC7B,EAAH,KAAQc,QAAQ,CAACd,EAAxB;AAA2B,SAAvD,CAArB;AACA4B,QAAAA,aAAa,IAAIxB,OAAO,CAACC,GAAR,CAAYiB,eAAZ,CAAjB;AACA,eAAOM,aAAa,GAAEA,aAAF,GAAgBd,QAApC;AACH,OAJiB,CAAlB;AAMA/B,MAAAA,YAAY,CAAC4C,aAAD,CAAZ;AACH,KATD;AAaH;;AAED,sBACI,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEzC,KAAjC;AAAA,cACKL;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;IAhGeD,gB;;KAAAA,gB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { database } from '../firebase'\n\nconst ProductoContext = React.createContext();\n\n\n\nexport function useProducto() {\n    return React.useContext(ProductoContext)\n}\n\n\nexport function ProductoProvider({ children }) {\n\n   \n    const [productos, setProductos] = React.useState();\n    const [categorias, setCategorias] = React.useState();\n\n    const value = {\n        productos,\n        categorias,\n        loadProductoContext,\n        upgradeProducto,\n        upgradeProductoBulk\n    }\n\n    function loadProducto() {\n        const productosRef = database.collection(\"productos\")\n        productosRef.get().then(querySnapshot => {\n           \n            const lista = []\n            querySnapshot.forEach(documentSnapshot => {\n                lista.push({ id: documentSnapshot.id, ...documentSnapshot.data() })\n            });\n            setProductos(lista)\n\n        }).catch(error => {\n            console.log(error)\n        });\n    }\n\n    function loadProductoContext() {\n        loadProducto();\n        database.collection(\"categorias_producto\").get().then(query => {\n            const lista = []\n            query.forEach(document => { lista.push({ id: document.id, ...document.data() }) })\n            \n            setCategorias(lista)\n        })\n    }\n\n    function upgradeProducto(prodID, data, deleteKey) {\n        console.log(prodID)\n\n        database.collection(\"productos\").doc(prodID).update(data).\n            then(() => {\n                console.log(\"exito?\")\n                const newProductos = productos.map((producto) => {\n\n                    const match = (producto.id == prodID)\n                    data = deleteKey ? { categoria_id: undefined } : data\n                    return match ? Object.assign({}, producto, data) : producto\n                })\n                \n                setProductos(newProductos)\n            })\n    }\n\n\n\n    function upgradeProductoBulk(productosID, data, deleteKey) {\n        const batch = database.batch()\n        const nuevosProductos =[]\n        \n        productosID.forEach((prodID) => {\n            \n            const ref = database.collection(\"productos\").doc(prodID)\n            batch.update(ref, data)\n\n            \n            data = deleteKey ? { categoria_id: undefined } : data\n            \n            let producto =productos.find(p=>p.id==productosID)\n            producto=Object.assign({},producto,data)\n            nuevosProductos.push(producto)\n            \n        })\n\n        batch.commit().then(()=>{\n            \n            let dataProductos=productos.map((producto)=>{\n                const nuevoProducto =nuevosProductos.find((np)=>{return np.id===producto.id})\n                nuevoProducto && console.log(nuevosProductos)\n                return nuevoProducto? nuevoProducto:producto\n            })\n\n            setProductos(dataProductos)\n        })\n\n\n\n    }\n\n    return (\n        <ProductoContext.Provider value={value}>\n            {children}\n        </ProductoContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}