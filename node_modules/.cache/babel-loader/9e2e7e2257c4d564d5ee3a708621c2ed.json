{"ast":null,"code":"import _objectSpread from\"/home/luisfer/Escritorio/rerovaji-control/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/luisfer/Escritorio/rerovaji-control/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import firebase,{database}from'../firebase';import{useLocal}from'./LocalContext';import{useTrabajador}from'./TrabajadorContext';import{jsx as _jsx}from\"react/jsx-runtime\";export var ContratoContext=/*#__PURE__*/React.createContext();export function useContrato(){return React.useContext(ContratoContext);}export function ContratoProvider(_ref){var children=_ref.children;var _useTrabajador=useTrabajador(),trabajadores=_useTrabajador.trabajadores;var _useLocal=useLocal(),local=_useLocal.local;var _useState=useState(),_useState2=_slicedToArray(_useState,2),contrato=_useState2[0],setContrato=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),contratos=_useState4[0],setContratos=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),selfDB=_useState6[0],setDB=_useState6[1];console.log(local);useEffect(function(){if(local){var db=database.collection(\"locales\").doc(local.id).collection(\"contratos\");setDB(db);}},[local]);useEffect(function(){if(trabajadores){var t_ids=trabajadores.map(function(t){return t.id;});var contracts=[];selfDB.where(\"trabajador_id\",\"in\",t_ids).where(\"activo\",\"==\",true).get().then(function(c){contracts.append(_objectSpread({id:c.id},c.data()));});}},[trabajadores]);var createContrato=function createContrato(data){selfDB.add(data).then(function(query){console.log(\"lo subii\");});};var value={contrato:contrato,contratos:contratos,createContrato:createContrato};return/*#__PURE__*/_jsx(ContratoContext.Provider,{value:value,children:children});}","map":{"version":3,"sources":["/home/luisfer/Escritorio/rerovaji-control/src/contexts/ContratoContext.js"],"names":["React","useEffect","useState","firebase","database","useLocal","useTrabajador","ContratoContext","createContext","useContrato","useContext","ContratoProvider","children","trabajadores","local","contrato","setContrato","contratos","setContratos","selfDB","setDB","console","log","db","collection","doc","id","t_ids","map","t","contracts","where","get","then","c","append","data","createContrato","add","query","value"],"mappings":"+TAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAQC,CAAAA,QAAR,EAAmBC,QAAnB,KAAmC,aAAnC,CAEA,OAASC,QAAT,KAAyB,gBAAzB,CACA,OAASC,aAAT,KAA8B,qBAA9B,C,2CAKA,MAAO,IAAMC,CAAAA,eAAe,cAAGP,KAAK,CAACQ,aAAN,EAAxB,CAKP,MAAO,SAASC,CAAAA,WAAT,EAAuB,CAC1B,MAAOT,CAAAA,KAAK,CAACU,UAAN,CAAiBH,eAAjB,CAAP,CACH,CACD,MAAO,SAASI,CAAAA,gBAAT,MAAwC,IAAZC,CAAAA,QAAY,MAAZA,QAAY,CAC3C,mBAAyBN,aAAa,EAAtC,CAAQO,YAAR,gBAAQA,YAAR,CACA,cAAcR,QAAQ,EAAtB,CAAOS,KAAP,WAAOA,KAAP,CACA,cAA6BZ,QAAQ,EAArC,wCAAOa,QAAP,eAAgBC,WAAhB,eACA,eAAkCd,QAAQ,EAA1C,yCAAOe,SAAP,eAAkBC,YAAlB,eACA,eAAwBhB,QAAQ,EAAhC,yCAAOiB,MAAP,eAAeC,KAAf,eAEAC,OAAO,CAACC,GAAR,CAAYR,KAAZ,EAEAb,SAAS,CAAC,UAAM,CAEZ,GAAGa,KAAH,CAAS,CACJ,GAAMS,CAAAA,EAAE,CAAGnB,QAAQ,CAACoB,UAAT,CAAoB,SAApB,EAA+BC,GAA/B,CAAmCX,KAAK,CAACY,EAAzC,EAA6CF,UAA7C,CAAwD,WAAxD,CAAX,CACLJ,KAAK,CAACG,EAAD,CAAL,CAEC,CAGJ,CATQ,CASN,CAACT,KAAD,CATM,CAAT,CAWAb,SAAS,CAAC,UAAI,CACV,GAAGY,YAAH,CAAgB,CACZ,GAAMc,CAAAA,KAAK,CAACd,YAAY,CAACe,GAAb,CAAiB,SAACC,CAAD,QAAKA,CAAAA,CAAC,CAACH,EAAP,EAAjB,CAAZ,CACA,GAAMI,CAAAA,SAAS,CAAC,EAAhB,CACAX,MAAM,CACFY,KADJ,CACU,eADV,CAC0B,IAD1B,CAC+BJ,KAD/B,EAEII,KAFJ,CAEU,QAFV,CAEmB,IAFnB,CAEwB,IAFxB,EAGIC,GAHJ,GAIIC,IAJJ,CAIS,SAAAC,CAAC,CAAE,CACJJ,SAAS,CAACK,MAAV,gBAAkBT,EAAE,CAACQ,CAAC,CAACR,EAAvB,EAA6BQ,CAAC,CAACE,IAAF,EAA7B,GACH,CANL,EAOH,CAEJ,CAbQ,CAaP,CAACvB,YAAD,CAbO,CAAT,CAgBA,GAAMwB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACD,IAAD,CAAU,CAC7BjB,MAAM,CAACmB,GAAP,CAAWF,IAAX,EAAiBH,IAAjB,CAAsB,SAACM,KAAD,CAAW,CAC7BlB,OAAO,CAACC,GAAR,CAAY,UAAZ,EACH,CAFD,EAGH,CAJD,CAMA,GAAMkB,CAAAA,KAAK,CAAG,CACVzB,QAAQ,CAARA,QADU,CAEVE,SAAS,CAATA,SAFU,CAGVoB,cAAc,CAAdA,cAHU,CAAd,CAQA,mBACI,KAAC,eAAD,CAAiB,QAAjB,EAA0B,KAAK,CAAEG,KAAjC,UACK5B,QADL,EADJ,CAKH","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport  firebase,{ database } from '../firebase'\n\nimport { useLocal } from './LocalContext';\nimport { useTrabajador } from './TrabajadorContext';\n\n\n\n\nexport const ContratoContext = React.createContext();\n\n\n\n\nexport function useContrato() {\n    return React.useContext(ContratoContext)\n}\nexport function ContratoProvider({ children }) {\n    const { trabajadores } = useTrabajador()\n    const {local}=useLocal()\n    const [contrato,setContrato]=useState()\n    const [contratos, setContratos] = useState()\n    const [selfDB, setDB] = useState()\n    \n    console.log(local)\n\n    useEffect(() => {\n\n        if(local){\n             const db = database.collection(\"locales\").doc(local.id).collection(\"contratos\")\n        setDB(db)\n\n        }\n       \n\n    }, [local])\n\n    useEffect(()=>{\n        if(trabajadores){\n            const t_ids=trabajadores.map((t)=>t.id)\n            const contracts=[]\n            selfDB.\n                where(\"trabajador_id\",\"in\",t_ids).\n                where(\"activo\",\"==\",true).\n                get().\n                then(c=>{\n                    contracts.append({id:c.id,...c.data()})\n                })\n        }\n        \n    },[trabajadores])\n\n    \n    const createContrato = (data) => {\n        selfDB.add(data).then((query) => {\n            console.log(\"lo subii\")\n        })\n    }\n\n    const value = {\n        contrato,\n        contratos,\n        createContrato,\n        \n    }\n\n\n    return (\n        <ContratoContext.Provider value={value}>\n            {children}\n        </ContratoContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}