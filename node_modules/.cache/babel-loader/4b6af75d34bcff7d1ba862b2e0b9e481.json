{"ast":null,"code":"var _jsxFileName = \"/home/luisfer/Escritorio/rerovaji-control/src/contexts/MessageContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { database, storage } from '../firebase';\nimport { useAuth } from './AuthContext';\nimport { useCompis } from './CompisContext';\nimport { useLocal } from './LocalContext';\nimport firebase from \"firebase/app\";\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmoment.locale(\"es\");\nexport const MesageContext = /*#__PURE__*/React.createContext();\nexport function useMesage() {\n  _s();\n\n  return React.useContext(MesageContext);\n}\n\n_s(useMesage, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function MessageProvider({\n  children\n}) {\n  _s2();\n\n  const {\n    local\n  } = useLocal();\n  const {\n    userAPI\n  } = useAuth();\n  const [localRef, setLocalRef] = useState();\n  const [mensajes, setMensajes] = useState();\n  const [misMensajes, setMisMensajes] = useState();\n  useEffect(() => {\n    let msgs = null;\n\n    if (local) {\n      msgs = database.collection(\"locales\").doc(local.id).collection(\"mensajes\").orderBy('date').onSnapshot(query => {\n        const newMsg = [];\n        const myMsg = [];\n        query.forEach(m => {\n          const id = m.id;\n\n          const _data = m.data();\n\n          const date = moment.utc(_data.date.seconds * 1000);\n          const data = Object.assign({}, _data, {\n            date\n          });\n          const {\n            from\n          } = data;\n\n          if (from === userAPI) {\n            myMsg.push({\n              id,\n              ...data\n            });\n          }\n\n          newMsg.push({\n            id,\n            ...data\n          });\n        });\n        setMensajes(newMsg);\n        setMisMensajes(myMsg);\n      });\n    }\n\n    return msgs ? () => msgs() : null;\n  }, [setMensajes, local, userAPI]);\n\n  const sendMensaje = data => {\n    const author = userAPI.correo;\n    const date = firebase.firestore.Timestamp.fromDate(new Date());\n    database.collection(\"locales\").doc(local.id).collection(\"mensajes\").add({\n      author,\n      date,\n      ...data\n    });\n  };\n\n  const value = {\n    mensajes,\n    sendMensaje\n  };\n  return /*#__PURE__*/_jsxDEV(MesageContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(MessageProvider, \"QUD4WOLKyo08uv9U9deKzWWA0B8=\", false, function () {\n  return [useLocal, useAuth];\n});\n\n_c = MessageProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageProvider\");","map":{"version":3,"sources":["/home/luisfer/Escritorio/rerovaji-control/src/contexts/MessageContext.js"],"names":["React","useEffect","useState","database","storage","useAuth","useCompis","useLocal","firebase","moment","locale","MesageContext","createContext","useMesage","useContext","MessageProvider","children","local","userAPI","localRef","setLocalRef","mensajes","setMensajes","misMensajes","setMisMensajes","msgs","collection","doc","id","orderBy","onSnapshot","query","newMsg","myMsg","forEach","m","_data","data","date","utc","seconds","Object","assign","from","push","sendMensaje","author","correo","firestore","Timestamp","fromDate","Date","add","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { database, storage } from '../firebase'\nimport { useAuth } from './AuthContext';\nimport { useCompis } from './CompisContext';\nimport { useLocal } from './LocalContext'\nimport firebase from \"firebase/app\";\n\nimport moment from 'moment'\nimport 'moment/locale/es';\n\nmoment.locale(\"es\")\n\n\nexport const MesageContext = React.createContext();\n\n\n\n\nexport function useMesage() {\n    return React.useContext(MesageContext)\n}\nexport function MessageProvider({ children }) {\n    const { local } = useLocal()\n    const { userAPI } = useAuth()\n    const [localRef, setLocalRef] = useState()\n\n    const [mensajes, setMensajes] = useState()\n    const [misMensajes, setMisMensajes] = useState()\n\n\n\n    useEffect(() => {\n        let msgs = null\n        if (local) {\n            msgs = database.collection(\"locales\").doc(local.id).collection(\"mensajes\").orderBy('date').onSnapshot((query) => {\n                const newMsg = []\n                const myMsg = []\n                query.forEach(m => {\n                    const id = m.id\n                    const _data = m.data()\n                    const date=moment.utc(_data.date.seconds*1000)\n                    \n                    const data=Object.assign({},_data,{date})\n                    const { from } = data\n                    if ((from === userAPI)) {\n                        myMsg.push({ id, ...data })\n                    }\n                    newMsg.push({ id, ...data })\n\n\n                })\n                setMensajes(newMsg)\n                setMisMensajes(myMsg)\n            })\n        }\n        return msgs ? () => msgs() : null\n    }, [setMensajes, local, userAPI])\n\n    const sendMensaje = (data) => {\n        const author = userAPI.correo\n\n        const date = firebase.firestore.Timestamp.fromDate(new Date())\n        database.collection(\"locales\").doc(local.id).collection(\"mensajes\").add({ author, date, ...data })\n    }\n\n    const value = {\n        mensajes,\n        sendMensaje,\n    }\n\n\n    return (\n        <MesageContext.Provider value={value}>\n            {children}\n        </MesageContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}