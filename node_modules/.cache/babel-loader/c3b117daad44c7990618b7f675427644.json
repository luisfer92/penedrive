{"ast":null,"code":"var _jsxFileName = \"/home/luisfer/Escritorio/rerovaji-control/src/contexts/TenicosContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { database } from '../firebase';\nimport { useLocal } from './LocalContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TecnicosContext = /*#__PURE__*/React.createContext();\nexport function useTecnicos() {\n  _s();\n\n  return React.useContext(TecnicosContext);\n}\n\n_s(useTecnicos, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function TecnicosProvider({\n  children\n}) {\n  _s2();\n\n  const {\n    local\n  } = useLocal();\n  const [tecnicos, setTecnicos] = useState();\n  const [selfDB, setDB] = useState();\n  const value = {\n    tecnicos,\n    createTecnico\n  };\n  useEffect(() => {\n    if (local) {\n      const db = database.collection(\"locales\").doc(local.id).collection(\"tecnicos\");\n      setDB(db);\n    }\n  }, [local]);\n  useEffect(() => {\n    let unsubscribe = null;\n\n    if (selfDB) {\n      const plantilla = [];\n      console.log(\"carga inicial trabajadores\");\n      selfDB.orderBy(\"nombre\").onSnapshot(snap => {\n        snap.forEach(t => {\n          plantilla.push({\n            id: t.id,\n            ...t.data()\n          });\n        });\n        setTecnicos(plantilla);\n      });\n    }\n\n    return unsubscribe ? () => unsubscribe() : null;\n  }, [selfDB, setTecnicos]);\n\n  const createTecnico = data => {\n    selfDB.add(data).then(query => {\n      console.log(\"lo subii\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TecnicosContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(TecnicosProvider, \"fHD//b0JjAMrU69B+Oq8nsfZxdY=\", false, function () {\n  return [useLocal];\n});\n\n_c = TecnicosProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TecnicosProvider\");","map":{"version":3,"sources":["/home/luisfer/Escritorio/rerovaji-control/src/contexts/TenicosContext.js"],"names":["React","useEffect","useState","database","useLocal","TecnicosContext","createContext","useTecnicos","useContext","TecnicosProvider","children","local","tecnicos","setTecnicos","selfDB","setDB","value","createTecnico","db","collection","doc","id","unsubscribe","plantilla","console","log","orderBy","onSnapshot","snap","forEach","t","push","data","add","then","query"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAUC,QAAV,QAA0B,aAA1B;AAGA,SAASC,QAAT,QAAyB,gBAAzB;;AAKA,OAAO,MAAMC,eAAe,gBAAGL,KAAK,CAACM,aAAN,EAAxB;AAKP,OAAO,SAASC,WAAT,GAAuB;AAAA;;AAC1B,SAAOP,KAAK,CAACQ,UAAN,CAAiBH,eAAjB,CAAP;AACH;;GAFeE,W;;AAGhB,OAAO,SAASE,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAwC;AAAA;;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAYP,QAAQ,EAA1B;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,EAAxC;AACA,QAAM,CAACY,MAAD,EAASC,KAAT,IAAkBb,QAAQ,EAAhC;AAEA,QAAMc,KAAK,GAAG;AACVJ,IAAAA,QADU;AAEVK,IAAAA;AAFU,GAAd;AAOAhB,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAGU,KAAH,EAAS;AACJ,YAAMO,EAAE,GAAGf,QAAQ,CAACgB,UAAT,CAAoB,SAApB,EAA+BC,GAA/B,CAAmCT,KAAK,CAACU,EAAzC,EAA6CF,UAA7C,CAAwD,UAAxD,CAAX;AACLJ,MAAAA,KAAK,CAACG,EAAD,CAAL;AAEC;AAGJ,GATQ,EASN,CAACP,KAAD,CATM,CAAT;AAWAV,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIqB,WAAW,GAAG,IAAlB;;AACA,QAAIR,MAAJ,EAAY;AACR,YAAMS,SAAS,GAAG,EAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAX,MAAAA,MAAM,CAACY,OAAP,CAAe,QAAf,EAAyBC,UAAzB,CAAqCC,IAAD,IAAU;AAC1CA,QAAAA,IAAI,CAACC,OAAL,CAAcC,CAAD,IAAO;AAEhBP,UAAAA,SAAS,CAACQ,IAAV,CAAe;AAAEV,YAAAA,EAAE,EAAES,CAAC,CAACT,EAAR;AAAY,eAAGS,CAAC,CAACE,IAAF;AAAf,WAAf;AACH,SAHD;AAIAnB,QAAAA,WAAW,CAACU,SAAD,CAAX;AACH,OAND;AAOH;;AAED,WAAOD,WAAW,GAAG,MAAMA,WAAW,EAApB,GAAyB,IAA3C;AACH,GAhBQ,EAgBN,CAACR,MAAD,EAASD,WAAT,CAhBM,CAAT;;AAkBA,QAAMI,aAAa,GAAIe,IAAD,IAAU;AAC5BlB,IAAAA,MAAM,CAACmB,GAAP,CAAWD,IAAX,EAAiBE,IAAjB,CAAuBC,KAAD,IAAW;AAC7BX,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,KAFD;AAGH,GAJD;;AAQA,sBACI,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAET,KAAjC;AAAA,cAESN;AAFT;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;IAxDeD,gB;UACML,Q;;;KADNK,gB","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport  { database } from '../firebase'\n\n\nimport { useLocal } from './LocalContext';\n\n\n\n\nexport const TecnicosContext = React.createContext();\n\n\n\n\nexport function useTecnicos() {\n    return React.useContext(TecnicosContext)\n}\nexport function TecnicosProvider({ children }) {\n    const { local } = useLocal()\n    const [tecnicos, setTecnicos] = useState()\n    const [selfDB, setDB] = useState()\n\n    const value = {\n        tecnicos,\n        createTecnico,\n        \n    }\n\n\n    useEffect(() => {\n\n        if(local){\n             const db = database.collection(\"locales\").doc(local.id).collection(\"tecnicos\")\n        setDB(db)\n\n        }\n       \n\n    }, [local])\n\n    useEffect(() => {\n       \n        let unsubscribe = null\n        if (selfDB) {\n            const plantilla = []\n            console.log(\"carga inicial trabajadores\")\n            selfDB.orderBy(\"nombre\").onSnapshot((snap) => {\n                snap.forEach((t) => {\n                   \n                    plantilla.push({ id: t.id, ...t.data() })\n                })\n                setTecnicos(plantilla)\n            })\n        }\n\n        return unsubscribe ? () => unsubscribe() : null\n    }, [selfDB, setTecnicos])\n\n    const createTecnico = (data) => {\n        selfDB.add(data).then((query) => {\n            console.log(\"lo subii\")\n        })\n    }\n\n  \n\n    return (\n        <TecnicosContext.Provider value={value}>\n            \n                {children}\n                      \n        </TecnicosContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}