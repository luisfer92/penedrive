{"ast":null,"code":"var _jsxFileName = \"/home/luisfer/Escritorio/rerovaji-control/src/contexts/ContratoContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { database } from '../firebase';\nimport firebase from \"firebase/app\";\nimport { useLocal } from './LocalContext';\nimport { useTrabajador } from './TrabajadorContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContratoContext = /*#__PURE__*/React.createContext();\nexport function useContrato() {\n  _s();\n\n  return React.useContext(ContratoContext);\n}\n\n_s(useContrato, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function ContratoProvider({\n  children\n}) {\n  _s2();\n\n  const {\n    trabajadores\n  } = useTrabajador();\n  const {\n    local\n  } = useLocal();\n  const [contrato, setContrato] = useState();\n  const [contratos, setContratos] = useState();\n  const [selfDB, setDB] = useState();\n  console.log(local);\n  useEffect(() => {\n    if (local) {\n      const db = database.collection(\"locales\").doc(local.id).collection(\"contratos\");\n      setDB(db);\n    }\n  }, [local]);\n  useEffect(() => {\n    if (trabajadores) {\n      const t_ids = trabajadores.map(t => t.id);\n      const contracts = [];\n      t_ids.length > 0 && selfDB.where(\"trabajador_id\", \"in\", t_ids).where(\"activo\", \"==\", true).get().then(q => {\n        q.forEach(c => contracts.append({\n          id: c.id,\n          ...c.data()\n        }));\n        setContratos(contracts);\n      });\n    }\n  }, [trabajadores]);\n\n  const getContratoByTrabajadorID = trabajadorID => {\n    return contratos === null || contratos === void 0 ? void 0 : contratos.find(c => c.trabajador_id === trabajadorID);\n  };\n\n  const createContrato = (data, trabajador_id) => {\n    var dataLimpia = data;\n    const {\n      inicio,\n      duracion\n    } = data;\n    dataLimpia.inicio = firebase.firestore.Timestamp.fromMillis(Date.parse(inicio));\n    dataLimpia.duracion = dataLimpia.fin != undefined ? firebase.firestore.Timestamp.fromMillis(Date.parse(duracion)) : firebase.firestore.Timestamp.fromMillis(0);\n\n    if (!trabajador_id) {\n      delete dataLimpia.trabajador_id;\n    } else {\n      dataLimpia.trabajador_id = trabajador_id;\n    }\n\n    console.log(dataLimpia);\n    selfDB.add(data).then(query => {\n      console.log(\"contrato subido\");\n    });\n  };\n\n  const value = {\n    contrato,\n    contratos,\n    createContrato,\n    getContratoByTrabajadorID\n  };\n  return /*#__PURE__*/_jsxDEV(ContratoContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(ContratoProvider, \"Zh1Z6DvF89fqerYxe+mmV3t1trM=\", false, function () {\n  return [useTrabajador, useLocal];\n});\n\n_c = ContratoProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContratoProvider\");","map":{"version":3,"sources":["/home/luisfer/Escritorio/rerovaji-control/src/contexts/ContratoContext.js"],"names":["React","useEffect","useState","database","firebase","useLocal","useTrabajador","ContratoContext","createContext","useContrato","useContext","ContratoProvider","children","trabajadores","local","contrato","setContrato","contratos","setContratos","selfDB","setDB","console","log","db","collection","doc","id","t_ids","map","t","contracts","length","where","get","then","q","forEach","c","append","data","getContratoByTrabajadorID","trabajadorID","find","trabajador_id","createContrato","dataLimpia","inicio","duracion","firestore","Timestamp","fromMillis","Date","parse","fin","undefined","add","query","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport  { database } from '../firebase'\nimport firebase from \"firebase/app\";\nimport { useLocal } from './LocalContext';\nimport { useTrabajador } from './TrabajadorContext';\n\n\n\n\nexport const ContratoContext = React.createContext();\n\n\n\n\nexport function useContrato() {\n    return React.useContext(ContratoContext)\n}\nexport function ContratoProvider({ children }) {\n    const { trabajadores } = useTrabajador()\n    const {local}=useLocal()\n    const [contrato,setContrato]=useState()\n    const [contratos, setContratos] = useState()\n    const [selfDB, setDB] = useState()\n    \n    console.log(local)\n\n    useEffect(() => {\n\n        if(local){\n             const db = database.collection(\"locales\").doc(local.id).collection(\"contratos\")\n        setDB(db)\n\n        }\n       \n\n    }, [local])\n\n    useEffect(()=>{\n        if(trabajadores){\n            const t_ids=trabajadores.map((t)=>t.id)\n            const contracts=[]\n            t_ids.length >0 && selfDB.\n                where(\"trabajador_id\",\"in\",t_ids).\n                where(\"activo\",\"==\",true).\n                get().\n                then(q=>{\n                    \n                    q.forEach(c=> contracts.append({id:c.id,...c.data()}))\n                    setContratos(contracts)\n                })\n        }\n        \n    },[trabajadores])\n\n\n    const getContratoByTrabajadorID=(trabajadorID)=>{\n        return contratos?.find(c=>c.trabajador_id===trabajadorID)\n    }\n\n    \n    const createContrato = (data,trabajador_id) => {\n        var dataLimpia=data\n        const {inicio,duracion}=data\n        dataLimpia.inicio=firebase.firestore.Timestamp.fromMillis(Date.parse(inicio))\n        dataLimpia.duracion=dataLimpia.fin!=undefined?firebase.firestore.Timestamp.fromMillis(Date.parse(duracion)):firebase.firestore.Timestamp.fromMillis(0)\n        if(!trabajador_id){\n            delete dataLimpia.trabajador_id\n        }else{\n            dataLimpia.trabajador_id=trabajador_id\n        }\n        console.log(dataLimpia)\n        \n        selfDB.add(data).then((query) => {\n           console.log(\"contrato subido\")\n        })\n        \n    }\n\n    const value = {\n        contrato,\n        contratos,\n        createContrato,\n        getContratoByTrabajadorID,\n        \n    }\n\n\n    return (\n        <ContratoContext.Provider value={value}>\n            {children}\n        </ContratoContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}