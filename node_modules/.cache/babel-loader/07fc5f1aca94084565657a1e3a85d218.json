{"ast":null,"code":"import _objectSpread from\"/home/luisfer/Escritorio/rerovaji-control/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/luisfer/Escritorio/rerovaji-control/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{database}from'../firebase';import{ContratoContext}from'./ContratoContext';import{useLocal}from'./LocalContext';import{jsx as _jsx}from\"react/jsx-runtime\";export var TrabajadorContext=/*#__PURE__*/React.createContext();export function useTrabajador(){return React.useContext(TrabajadorContext);}export function TrabajadorProvider(_ref){var children=_ref.children;var _useLocal=useLocal(),local=_useLocal.local;var _useState=useState(),_useState2=_slicedToArray(_useState,2),trabajadores=_useState2[0],setTrabajadores=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),selfDB=_useState4[0],setDB=_useState4[1];console.log(local);useEffect(function(){if(local){var db=database.collection(\"locales\").doc(local.id).collection(\"plantilla\");setDB(db);}},[local]);useEffect(function(){var unsubscribe=null;if(selfDB){var plantilla=[];console.log(\"carga inicial trabajadores\");selfDB.orderBy(\"nombre\").onSnapshot(function(snap){snap.forEach(function(t){plantilla.push(_objectSpread({id:t.id},t.data()));});setTrabajadores(plantilla);});}return unsubscribe?function(){return unsubscribe();}:null;},[selfDB,setTrabajadores]);var createTrabajador=function createTrabajador(data){selfDB.add(data).then(function(query){console.log(\"lo subii\");});};var value={trabajadores:trabajadores,createTrabajador:createTrabajador};return/*#__PURE__*/_jsx(TrabajadorContext.Provider,{value:value,children:/*#__PURE__*/_jsx(ContratoContext.Provider,{children:children})});}","map":{"version":3,"sources":["/home/luisfer/Escritorio/rerovaji-control/src/contexts/TrabajadorContext.js"],"names":["React","useEffect","useState","database","ContratoContext","useLocal","TrabajadorContext","createContext","useTrabajador","useContext","TrabajadorProvider","children","local","trabajadores","setTrabajadores","selfDB","setDB","console","log","db","collection","doc","id","unsubscribe","plantilla","orderBy","onSnapshot","snap","forEach","t","push","data","createTrabajador","add","then","query","value"],"mappings":"+TAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAAUC,QAAV,KAA0B,aAA1B,CACA,OAASC,eAAT,KAAgC,mBAAhC,CAEA,OAASC,QAAT,KAAyB,gBAAzB,C,2CAKA,MAAO,IAAMC,CAAAA,iBAAiB,cAAGN,KAAK,CAACO,aAAN,EAA1B,CAKP,MAAO,SAASC,CAAAA,aAAT,EAAyB,CAC5B,MAAOR,CAAAA,KAAK,CAACS,UAAN,CAAiBH,iBAAjB,CAAP,CACH,CACD,MAAO,SAASI,CAAAA,kBAAT,MAA0C,IAAZC,CAAAA,QAAY,MAAZA,QAAY,CAC7C,cAAkBN,QAAQ,EAA1B,CAAQO,KAAR,WAAQA,KAAR,CACA,cAAwCV,QAAQ,EAAhD,wCAAOW,YAAP,eAAqBC,eAArB,eACA,eAAwBZ,QAAQ,EAAhC,yCAAOa,MAAP,eAAeC,KAAf,eAEAC,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAEAX,SAAS,CAAC,UAAM,CAEZ,GAAGW,KAAH,CAAS,CACJ,GAAMO,CAAAA,EAAE,CAAGhB,QAAQ,CAACiB,UAAT,CAAoB,SAApB,EAA+BC,GAA/B,CAAmCT,KAAK,CAACU,EAAzC,EAA6CF,UAA7C,CAAwD,WAAxD,CAAX,CACLJ,KAAK,CAACG,EAAD,CAAL,CAEC,CAGJ,CATQ,CASN,CAACP,KAAD,CATM,CAAT,CAWAX,SAAS,CAAC,UAAM,CAEZ,GAAIsB,CAAAA,WAAW,CAAG,IAAlB,CACA,GAAIR,MAAJ,CAAY,CACR,GAAMS,CAAAA,SAAS,CAAG,EAAlB,CACAP,OAAO,CAACC,GAAR,CAAY,4BAAZ,EACAH,MAAM,CAACU,OAAP,CAAe,QAAf,EAAyBC,UAAzB,CAAoC,SAACC,IAAD,CAAU,CAC1CA,IAAI,CAACC,OAAL,CAAa,SAACC,CAAD,CAAO,CAEhBL,SAAS,CAACM,IAAV,gBAAiBR,EAAE,CAAEO,CAAC,CAACP,EAAvB,EAA8BO,CAAC,CAACE,IAAF,EAA9B,GACH,CAHD,EAIAjB,eAAe,CAACU,SAAD,CAAf,CACH,CAND,EAOH,CAED,MAAOD,CAAAA,WAAW,CAAG,iBAAMA,CAAAA,WAAW,EAAjB,EAAH,CAAyB,IAA3C,CACH,CAhBQ,CAgBN,CAACR,MAAD,CAASD,eAAT,CAhBM,CAAT,CAkBA,GAAMkB,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACD,IAAD,CAAU,CAC/BhB,MAAM,CAACkB,GAAP,CAAWF,IAAX,EAAiBG,IAAjB,CAAsB,SAACC,KAAD,CAAW,CAC7BlB,OAAO,CAACC,GAAR,CAAY,UAAZ,EACH,CAFD,EAGH,CAJD,CAMA,GAAMkB,CAAAA,KAAK,CAAG,CACVvB,YAAY,CAAZA,YADU,CAEVmB,gBAAgB,CAAhBA,gBAFU,CAAd,CAOA,mBACI,KAAC,iBAAD,CAAmB,QAAnB,EAA4B,KAAK,CAAEI,KAAnC,uBACI,KAAC,eAAD,CAAiB,QAAjB,WACKzB,QADL,EADJ,EADJ,CAOH","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport  { database } from '../firebase'\nimport { ContratoContext } from './ContratoContext';\n\nimport { useLocal } from './LocalContext';\n\n\n\n\nexport const TrabajadorContext = React.createContext();\n\n\n\n\nexport function useTrabajador() {\n    return React.useContext(TrabajadorContext)\n}\nexport function TrabajadorProvider({ children }) {\n    const { local } = useLocal()\n    const [trabajadores, setTrabajadores] = useState()\n    const [selfDB, setDB] = useState()\n\n    console.log(local)\n\n    useEffect(() => {\n\n        if(local){\n             const db = database.collection(\"locales\").doc(local.id).collection(\"plantilla\")\n        setDB(db)\n\n        }\n       \n\n    }, [local])\n\n    useEffect(() => {\n       \n        let unsubscribe = null\n        if (selfDB) {\n            const plantilla = []\n            console.log(\"carga inicial trabajadores\")\n            selfDB.orderBy(\"nombre\").onSnapshot((snap) => {\n                snap.forEach((t) => {\n                   \n                    plantilla.push({ id: t.id, ...t.data() })\n                })\n                setTrabajadores(plantilla)\n            })\n        }\n\n        return unsubscribe ? () => unsubscribe() : null\n    }, [selfDB, setTrabajadores])\n\n    const createTrabajador = (data) => {\n        selfDB.add(data).then((query) => {\n            console.log(\"lo subii\")\n        })\n    }\n\n    const value = {\n        trabajadores,\n        createTrabajador,\n        \n    }\n\n\n    return (\n        <TrabajadorContext.Provider value={value}>\n            <ContratoContext.Provider>\n                {children}\n            </ContratoContext.Provider>            \n        </TrabajadorContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}